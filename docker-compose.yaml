networks:
  toubeelib.net:
    driver: bridge

services:
  gateway.toubeelib:
    build:
      context: gateway/build
      dockerfile: 8.3-cli.Dockerfile
    ports:
      - '7080:80'
    volumes:
      - ./gateway:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - api.toubeelib
      - api.praticiens.toubeelib
      - api.rdv.toubeelib
    command: php -S 0.0.0.0:80 -t /var/php/public

  api.toubeelib:
    build:
      context: api-principale/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: api-principale/toubeelib.env
    ports:
      - '6080:80'
    volumes:
      - ./api-principale/app:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - toubeelib.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  api.praticiens.toubeelib:
    build:
      context: api-praticiens/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: api-praticiens/toubeelib.env
    ports:
      - '6081:80'
    volumes:
      - ./api-praticiens/app:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - praticiens.toubeelib.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  api.rdv.toubeelib:
    build:
      context: api-rdv/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: api-rdv/toubeelib.env
    ports:
      - '6082:80'
    volumes:
      - ./api-rdv/app:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      rdv.toubeelib.db:
        condition: service_started
      rabbitmq:
          condition: service_healthy
    command: php -S 0.0.0.0:80 -t /var/php/public

  api.auth.toubeelib:
    build:
      context: api-auth/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: api-auth/toubeelib.env
    ports:
      - '6083:80'
    volumes:
      - ./api-auth/app:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - auth.toubeelib.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  api.patient.toubeelib:
    build:
      context: api-patient/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: api-patient/toubeelib.env
    ports:
      - '6084:80'
    volumes:
      - ./api-patient/app:/var/php
    working_dir: /var/php
    networks:
      - toubeelib.net
    depends_on:
      - patient.toubeelib.db
    command: php -S 0.0.0.0:80 -t /var/php/public

  toubeelib.mail:
    build:
      context: mail/build
      dockerfile: 8.3-cli.Dockerfile
    env_file: mail/mail.env
    ports:
      - '6088:80'
    working_dir: /var/php
    volumes:
      - ./mail:/var/php
    networks:
      - toubeelib.net
    depends_on:
      rabbitmq:
        condition: service_healthy

    command: php mail.php

  praticiens.toubeelib.db:
    image: 'postgres:latest'
    env_file: api-praticiens/toubeelibdb.env
    ports:
      - '5433:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./api-praticiens/app/sql:/docker-entrypoint-initdb.d  # Mount SQL dump for initialization
      - ./api-praticiens/sql_data:/var/lib/postgresql/data  # Mount data directory for persistence

  rdv.toubeelib.db:
    image: 'postgres:latest'
    env_file: api-rdv/toubeelibdb.env
    ports:
      - '5434:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./api-rdv/app/sql:/docker-entrypoint-initdb.d  # Mount SQL dump for initialization
      - ./api-rdv/sql_data:/var/lib/postgresql/data  # Mount data directory for persistence

  auth.toubeelib.db:
    image: 'postgres:latest'
    env_file: api-auth/toubeelibdb.env
    ports:
      - '5435:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./api-auth/app/sql:/docker-entrypoint-initdb.d  # Mount SQL dump for initialization
      - ./api-auth/sql_data:/var/lib/postgresql/data  # Mount data directory for persistence

  patient.toubeelib.db:
    image: 'postgres:latest'
    env_file: api-patient/toubeelibdb.env
    ports:
      - '5436:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./api-patient/app/sql:/docker-entrypoint-initdb.d  # Mount SQL dump for initialization
      - ./api-patient/sql_data:/var/lib/postgresql/data  # Mount data directory for persistence

  toubeelib.db:
    image: 'postgres:latest'
    env_file: api-principale/toubeelibdb.env
    ports:
      - '5432:5432'
    networks:
      - toubeelib.net
    volumes:
      - ./api-principale/app/sql:/docker-entrypoint-initdb.d  # Mount SQL dump for initialization
      - ./api-principale/sql_data:/var/lib/postgresql/data  # Mount data directory for persistence

  adminer:
    image: 'adminer:latest'  # Consider using a specific version
    ports:
      - '8080:8080'
    networks:
      - toubeelib.net

  rabbitmq:
    image: rabbitmq:4-management
    ports:
      - '15672:15672'
      - '5672:5672'
    networks:
      - toubeelib.net
    volumes:
      - ./rabbitmq_dir:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=@dm1#!
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 8s
      timeout: 30s
      retries: 3

  mailcatcher:
    image: dockage/mailcatcher:latest
    ports:
      - "1080:1080"
      - "1025:1025"